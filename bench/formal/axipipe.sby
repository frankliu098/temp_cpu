[tasks]
cvr                         bus32 opt_lock
cvru   cvr opt_realignment  bus32 opt_lock
prf                         bus32 opt_lock
prfu   prf opt_realignment  bus32 opt_lock
prfs   prf                  bus32 opt_lock swap_wstrb
prfsu  prf opt_realignment  bus32 opt_lock swap_wstrb
cvr64 cvr                   bus64 opt_lock
prf64 prf                   bus64 opt_lock
prfu64  prf opt_realignment bus64 opt_lock
prfs64  prf                 bus64 opt_lock swap_wstrb
prfsu64 prf opt_realignment bus64 opt_lock swap_wstrb
# bmc
bmcu    bmc opt_realignemnt      opt_lock
bmc64   bmc                 bus64 opt_lock
bmcu64  bmc opt_realignemnt bus64 opt_lock

[options]
prf: mode prove
prf: depth 10
bmc: mode bmc
# bmc:  depth 13
bmcu: depth 40
cvr: mode cover
cvr:  depth 30
cvru: depth 42

[engines]
cvr: smtbmc
# prf: abc pdr
bmc: smtbmc
prf: smtbmc

[script]
read -define AXILPIPE
bmc: read -define BMC_ASSERT=assert
read -formal axipipe.v
read -formal faxi_master.v
read -formal faxi_addr.v
read -formal faxi_valaddr.v
read -formal faxi_wstrb.v
read -formal fmem.v
--pycode-begin--
cmd = "hierarchy -top axipipe"
cmd +=" -chparam OPT_ALIGNMENT_ERR %d" % (0 if "opt_realignment" in tags else 1)
if ("bus64" in tags):
	cmd +=" -chparam C_AXI_DATA_WIDTH 64"
else:
	cmd +=" -chparam C_AXI_DATA_WIDTH 32"
cmd +=" -chparam OPT_LOCK %d" % (1 if "opt_lock" in tags else 0)
cmd +=" -chparam SWAP_WSTRB %d" % (1 if "swap_wstrb" in tags else 0)
cmd +=" -chparam OPT_LOWPOWER 0"
output(cmd)
--pycode-end--

prep -top axipipe
cvr: chformal -assert -remove

[files]
../../rtl/core/axipipe.v
faxi_master.v
faxi_addr.v
faxi_valaddr.v
faxi_wstrb.v
fmem.v
